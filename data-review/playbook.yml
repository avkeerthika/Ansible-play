---
- name: install and configure webserver
  hosts: webserver
  vars:
     firewall_pkg: firewalld
     firewall_svc: firewalld
     web_pkg: httpd
     web_svc: httpd
     ssl_pkg: mod_ssl
     httpdconf_src: files/httpd.conf
     httpdconf_dest: /etc/httpd/conf/htpd.conf
     htaccess_src: files/.htaccess
     secrets_dir: /etc/httpd/secrets
     secrets_src: files/htpasswd
     secrets_dest: "{{ secrets_dir }}/htpasswd"
     web_root: /var/www/html

  tasks:
     - name: installing latest version of various packages
       dnf: 
         name:
            - "{{ firewall_pkg }}"
            - "{{ web_pkg }}"
            - "{{ ssl_pkg }}"
         state: latest
  tasks:
     - name: copy the web content
       copy:
          src: "{{ httpdconf_src }}"
          dest: "{{ httpdconf_dest }}"
          owner: root
          group: root
          mode: 0644

  tasks:
     - name: creating the Secrets directory
       file:
          path: "{{ secrets_dir }}"
          state: directory
          owner: apache
          group: apache
          mode: 0500
     - name: htpasswd file
       copy: 
          src: "{{ secrets_src }}"
          dest: "{{ secrets_dest }}"
          owner: apache
          group: apache
          mode: 0400
     - name: creating htaccess file
       copy:
          src: "{{ htaccess_src }}"
          dest: "{{ web_root }}/.htaccess"
          owner: apache
          group: apache
          mode: 0400
         

     - name: Generate content for index.html
       set_fact:
                                                
          custom_content: "{{ ansible_fqdn }} ({{ ansible_default_ipv4.address }}) has been customized by Ansible."



     - name: Create index.html file
       copy: 
          content: "{{ custom_content }}"  # Specify the content for the file
          dest: "{{ web_root }}/index.html"
     - name: enabling firewall services
       service:
          name: "{{ firewall_svc }}"
          state: started
          enabled: true
     - name: port configuration
       firewalld:
           service: https
           state: enabled
           immediate: true
           permanent: true
     - name: enabling web_service
       service:
           name: "{{ web_svc }}"
           state: started
           enabled: true

- name: test web server with basic auth
  hosts: localhost
  become: no
  vars:
      web_user: guest
  vars_files:
          - vars/secret.yml
  tasks: 
    - name: connect to web server with basic auth
      uri:
         url: https://serverb.lab.example.com
         method: GET
         force_basic_auth: yes
         user: "{{ web_user }}"
         password: "{{ web_pass }}"
         validate_certs: no
         return_content: yes
         status_code: 200
      register: auth_test
    - debug:
         var: auth_test.content
         
    - name: print content returned from the web server
      debug:
            msg: auth_test.content





              
